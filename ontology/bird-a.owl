<?xml version="1.0"?>


<!DOCTYPE Ontology [
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
]>


<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="https://w3id.org/bird-a"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     ontologyIRI="https://w3id.org/bird-a">
    <Prefix name="" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Import>http://purl.org/spar/doco</Import>
    <Import>http://purl.org/co</Import>
    <Annotation>
        <AnnotationProperty IRI="http://purl.org/dc/elements/1.1/title"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">Builder of Interfaces for RDF Data Authoring (BIRD-A) Ontology</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="http://purl.org/dc/elements/1.1/creator"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">Silvio Peroni</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">BIRD-A Ontology</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">Ontology for defining web interfaces for author and display RDF Data.</Literal>
    </Annotation>
    <Annotation>
        <AnnotationProperty IRI="http://purl.org/dc/elements/1.1/creator"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">Francesco Caliumi</Literal>
    </Annotation>
    <Declaration>
        <Class IRI="/CheckboxInput"/>
    </Declaration>
    <Declaration>
        <Class IRI="/DateInput"/>
    </Declaration>
    <Declaration>
        <Class IRI="/DiscardButton"/>
    </Declaration>
    <Declaration>
        <Class IRI="/FieldSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="/Form"/>
    </Declaration>
    <Declaration>
        <Class IRI="/HierarchicalWidget"/>
    </Declaration>
    <Declaration>
        <Class IRI="/InputWidget"/>
    </Declaration>
    <Declaration>
        <Class IRI="/LeafWidget"/>
    </Declaration>
    <Declaration>
        <Class IRI="/NextFieldSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="/NumberInput"/>
    </Declaration>
    <Declaration>
        <Class IRI="/RadioInput"/>
    </Declaration>
    <Declaration>
        <Class IRI="/SelectInput"/>
    </Declaration>
    <Declaration>
        <Class IRI="/StaticText"/>
    </Declaration>
    <Declaration>
        <Class IRI="/StaticWidget"/>
    </Declaration>
    <Declaration>
        <Class IRI="/SubForm"/>
    </Declaration>
    <Declaration>
        <Class IRI="/SubmitButton"/>
    </Declaration>
    <Declaration>
        <Class IRI="/TabbedFieldSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="/TextAreaInput"/>
    </Declaration>
    <Declaration>
        <Class IRI="/TextInput"/>
    </Declaration>
    <Declaration>
        <Class IRI="/Widget"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="/hasNextLocalNameCompoent"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/atLeast"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/atMost"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/doAutocomplete"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/hasBaseIRI"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/hasDefaultValue"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/hasDescription"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/hasLabel"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/hasMaximum"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/hasMinimum"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/hasOptions"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/hasTokenSeparator"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/isLocalNameComponent"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/mapsProperty"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/mapsResource"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/mapsType"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/usesPropertyForDescription"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="/usesPropertyForLabel"/>
    </Declaration>
    <Declaration>
        <Datatype abbreviatedIRI="rdf:HTML"/>
    </Declaration>
    <EquivalentClasses>
        <Class IRI="/HierarchicalWidget"/>
        <ObjectIntersectionOf>
            <Class IRI="/Widget"/>
            <ObjectAllValuesFrom>
                <ObjectProperty IRI="http://purl.org/co/element"/>
                <Class IRI="/Widget"/>
            </ObjectAllValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <SubClassOf>
        <Class IRI="/CheckboxInput"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/CheckboxInput"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/DateInput"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/DateInput"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/DiscardButton"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/DiscardButton"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/FieldSet"/>
        <Class IRI="/HierarchicalWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/Form"/>
        <Class IRI="/HierarchicalWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/HierarchicalWidget"/>
        <Class IRI="/Widget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/HierarchicalWidget"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="http://purl.org/co/element"/>
            <Class IRI="/Widget"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/InputWidget"/>
        <Class IRI="/Widget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/LeafWidget"/>
        <Class IRI="/Widget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/NextFieldSet"/>
        <Class IRI="/FieldSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/NumberInput"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/NumberInput"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/RadioInput"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/RadioInput"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/SelectInput"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/SelectInput"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/StaticText"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/StaticText"/>
        <Class IRI="/StaticWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/StaticWidget"/>
        <Class IRI="http://purl.org/spar/deo/DiscourseElement"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/StaticWidget"/>
        <Class IRI="/Widget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/SubForm"/>
        <Class IRI="/HierarchicalWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/SubmitButton"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/SubmitButton"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/TabbedFieldSet"/>
        <Class IRI="/FieldSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/TextAreaInput"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/TextAreaInput"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/TextInput"/>
        <Class IRI="/InputWidget"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="/TextInput"/>
        <Class IRI="/LeafWidget"/>
    </SubClassOf>
    <DisjointClasses>
        <Class IRI="/HierarchicalWidget"/>
        <Class IRI="/LeafWidget"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="/InputWidget"/>
        <Class IRI="/StaticWidget"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="/NextFieldSet"/>
        <Class IRI="/TabbedFieldSet"/>
    </DisjointClasses>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="/hasNextLocalNameCompoent"/>
        <Class IRI="/InputWidget"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="/hasNextLocalNameCompoent"/>
        <Class IRI="/LeafWidget"/>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="/hasNextLocalNameCompoent"/>
        <Class IRI="/InputWidget"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="/hasNextLocalNameCompoent"/>
        <Class IRI="/LeafWidget"/>
    </ObjectPropertyRange>
    <SubDataPropertyOf>
        <DataProperty IRI="/mapsProperty"/>
        <DataProperty IRI="/mapsResource"/>
    </SubDataPropertyOf>
    <SubDataPropertyOf>
        <DataProperty IRI="/mapsType"/>
        <DataProperty IRI="/mapsResource"/>
    </SubDataPropertyOf>
    <FunctionalDataProperty>
        <DataProperty IRI="/hasDefaultValue"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="/hasDescription"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="/hasLabel"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="/hasMaximum"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="/hasMinimum"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="/hasOptions"/>
    </FunctionalDataProperty>
    <DataPropertyDomain>
        <DataProperty IRI="/atLeast"/>
        <Class IRI="/Widget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/atMost"/>
        <Class IRI="/Widget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/doAutocomplete"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasBaseIRI"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasDefaultValue"/>
        <Class IRI="/InputWidget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasDescription"/>
        <Class IRI="/Widget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasLabel"/>
        <Class IRI="/Widget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasMaximum"/>
        <Class IRI="/DateInput"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasMaximum"/>
        <Class IRI="/NumberInput"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasMinimum"/>
        <Class IRI="/DateInput"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasMinimum"/>
        <Class IRI="/NumberInput"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasOptions"/>
        <Class IRI="/CheckboxInput"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasOptions"/>
        <Class IRI="/RadioInput"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasOptions"/>
        <Class IRI="/SelectInput"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasOptions"/>
        <Class IRI="/TextInput"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/hasTokenSeparator"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/isLocalNameComponent"/>
        <Class IRI="/InputWidget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/isLocalNameComponent"/>
        <Class IRI="/LeafWidget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/mapsResource"/>
        <Class IRI="/InputWidget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/mapsType"/>
        <Class IRI="/InputWidget"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/usesPropertyForDescription"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="/usesPropertyForLabel"/>
        <Class abbreviatedIRI="owl:Thing"/>
    </DataPropertyDomain>
    <DataPropertyRange>
        <DataProperty IRI="/atLeast"/>
        <Datatype abbreviatedIRI="xsd:nonNegativeInteger"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/atMost"/>
        <Datatype abbreviatedIRI="xsd:positiveInteger"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/doAutocomplete"/>
        <Datatype abbreviatedIRI="xsd:boolean"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/hasBaseIRI"/>
        <Datatype abbreviatedIRI="xsd:anyURI"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/hasDefaultValue"/>
        <Datatype abbreviatedIRI="rdfs:Literal"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/hasDescription"/>
        <Datatype abbreviatedIRI="rdf:HTML"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/hasLabel"/>
        <Datatype abbreviatedIRI="xsd:string"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/hasMaximum"/>
        <Datatype abbreviatedIRI="rdfs:Literal"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/hasMinimum"/>
        <Datatype abbreviatedIRI="rdfs:Literal"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/hasOptions"/>
        <DatatypeRestriction>
            <Datatype abbreviatedIRI="xsd:string"/>
            <FacetRestriction facet="&xsd;pattern">
                <Literal datatypeIRI="&rdf;PlainLiteral">^\s*(?:&apos;[^&apos;\]*(?:\[\S\s][^&apos;\]*)*&apos;|&quot;[^&quot;\]*(?:\[\S\s][^&quot;\]*)*&quot;|[^,&apos;&quot;\s\]*(?:\s+[^,&apos;&quot;\s\]+)*)\s*(?:,\s*(?:&apos;[^&apos;\]*(?:\[\S\s][^&apos;\]*)*&apos;|&quot;[^&quot;\]*(?:\[\S\s][^&quot;\]*)*&quot;|[^,&apos;&quot;\s\]*(?:\s+[^,&apos;&quot;\s\]+)*)\s*)*$</Literal>
            </FacetRestriction>
        </DatatypeRestriction>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/hasTokenSeparator"/>
        <DatatypeRestriction>
            <Datatype abbreviatedIRI="xsd:string"/>
            <FacetRestriction facet="&xsd;pattern">
                <Literal datatypeIRI="&rdf;PlainLiteral">[-_]?</Literal>
            </FacetRestriction>
        </DatatypeRestriction>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/isLocalNameComponent"/>
        <Datatype abbreviatedIRI="xsd:boolean"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/mapsResource"/>
        <Datatype abbreviatedIRI="xsd:anyURI"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/mapsType"/>
        <Datatype abbreviatedIRI="xsd:anyURI"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/usesPropertyForDescription"/>
        <Datatype abbreviatedIRI="xsd:anyURI"/>
    </DataPropertyRange>
    <DataPropertyRange>
        <DataProperty IRI="/usesPropertyForLabel"/>
        <Datatype abbreviatedIRI="xsd:anyURI"/>
    </DataPropertyRange>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/DiscardButton</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Permits user to specify the DiscardButton properties (like label, colour, etc). If this Widget is not present, Bird-a will take care to add a default one.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/FieldSet</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A FieldSet is a set of correlated Widgets that have to be presented together.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/FieldSet</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Field Set</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/Form</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A Form represents a set of ActionableWidgets which have to be sent simultaneusly towards the application. Every ActionableWidget should be contained in a Form.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/HierarchicalWidget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Widget which can contain other Widgets</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/HierarchicalWidget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Hierarchical Widget</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/InputWidget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Widget the user can interact with. It can be a text input, a submit action, etc.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/InputWidget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Actionable Widget</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/LeafWidget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Final Widget which represents the basic objects of the Form</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/LeafWidget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Leaf Widget</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/StaticText</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Static Text</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/StaticWidget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Widget the user can&apos;t interact with</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/StaticWidget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Static Widget</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/SubForm</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A SubForm maps an external instance of whatever ontology</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/SubForm</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Sub Form</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/SubmitButton</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Permits user to specify the SubmitButton properties (like label, colour, etc). If this Widget is not present, Bird-a will take care to add a default one.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/Widget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Top Class of BIRD-A Ontology. Everything is a Widget</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/Widget</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Widget</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/atLeast</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Specifies how many ocurrences of that Widget have at least to be inserted in the same Form. 

If zero, the field is optional
If greater than zero, the field is required (and will show a red &quot;*&quot;)
If greater than one, atLeast number of (required) widget will be shown</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/atLeast</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">at least</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/atMost</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Specifies how many ocurrences of that Widget can at most coexists in the same Form. 

If greater than 1 a plus botton is showed.
The plus button will be disabled when occurrences number hit atMost</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/atMost</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">at most</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/doAutocomplete</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Specify wheter the widget interface should try to autocomplete the field. Deafault &quot;false&quot;

Real domain: owl:Ontology + birda:Widget</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/doAutocomplete</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">do autocomplete</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/hasBaseIRI</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Specifies the base IRI of the target ontology instance

Real domain: owl:Ontology + birda:Form</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/hasBaseIRI</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">has base IRI</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/hasDefaultValue</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Value wherewith the input field is precompiled at insertion time (ignored at edit time)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/hasDefaultValue</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Default Value</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/hasDescription</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">More complete descripiton of the field meaning and possibile online help for the user. Intended to be shown like a tooltip.

The content could be any valid html.
hasDesctipiton is translatable and must have the language tag</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/hasDescription</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Description</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/hasLabel</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Short and explicative description of the Widget. It will be visible aside the input.

The content could be any valid html.
hasDesctipiton is translatable and must have the language tag</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/hasLabel</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">has Label</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/hasMaximum</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Set the maximum value for the specified input.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/hasMinimum</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Set the minimum value for the specified input.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty IRI="http://purl.org/dc/elements/1.1/description"/>
        <IRI>/hasNextLocalNameCompoent</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">States the next widget that will compose the instance local name, if any</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/hasNextLocalNameCompoent</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Has Next Local Name Component</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/hasOptions</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Specifies the options showed by selection widgets (like RadioInput) or restrict the range of a TextInput. The format is the common csv format (e.g: item1, &quot;Item 2&quot;,item3)

Here there is the verbose regex expression (as copied from http://programmers.stackexchange.com/questions/166454/can-the-csv-format-be-defined-by-a-regex ):

re_valid = r&quot;&quot;&quot;
# Validate a CSV string having single, double or un-quoted values.
^                                   # Anchor to start of string.
\s*                                 # Allow whitespace before value.
(?:                                 # Group for value alternatives.
  &apos;[^&apos;\\]*(?:\\[\S\s][^&apos;\\]*)*&apos;     # Either Single quoted string,
| &quot;[^&quot;\\]*(?:\\[\S\s][^&quot;\\]*)*&quot;     # or Double quoted string,
| [^,&apos;&quot;\s\\]*(?:\s+[^,&apos;&quot;\s\\]+)*    # or Non-comma, non-quote stuff.
)                                   # End group of value alternatives.
\s*                                 # Allow whitespace after value.
(?:                                 # Zero or more additional values
  ,                                 # Values separated by a comma.
  \s*                               # Allow whitespace before value.
  (?:                               # Group for value alternatives.
    &apos;[^&apos;\\]*(?:\\[\S\s][^&apos;\\]*)*&apos;   # Either Single quoted string,
  | &quot;[^&quot;\\]*(?:\\[\S\s][^&quot;\\]*)*&quot;   # or Double quoted string,
  | [^,&apos;&quot;\s\\]*(?:\s+[^,&apos;&quot;\s\\]+)*  # or Non-comma, non-quote stuff.
  )                                 # End group of value alternatives.
  \s*                               # Allow whitespace after value.
)*                                  # Zero or more additional values
$                                   # Anchor to end of string.
&quot;&quot;&quot;
re.match(re_valid, &apos;[...]&apos;, re.VERBOSE)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/hasTokenSeparator</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Specifies which serator should be used between tokens during the local name generation. Possibile values are:
- &quot;&quot;: camelCaseSeparation
- &quot;-&quot;: dash-separation
- &quot;_&quot;: underscore_separation

Real domain: owl:Ontology + birda:Form</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/hasTokenSeparator</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">has token separator</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/isLocalNameComponent</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">States that this widget value should be used to generate instance local name</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/isLocalNameComponent</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Is Local Name Component</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/mapsProperty</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">maps property</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/mapsResource</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">maps resource</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/mapsType</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">maps type</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/usesPropertyForDescription</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Specifies which property birda should use to identify the label to display for the indivduals of the target ontology

Real domain: owl:Ontology + birda:Form</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/usesPropertyForDescription</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">uses property for description</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>/usesPropertyForLabel</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Specifies which property birda should use to identify the comment to display for the indivduals of the target ontology

Real domain: owl:Ontology + birda:Form</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>/usesPropertyForLabel</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">uses property for label</Literal>
    </AnnotationAssertion>
</Ontology>



<!-- Generated by the OWL API (version 3.5.0) http://owlapi.sourceforge.net -->

