###
# app configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.6-branch/narr/environment.html
###

[app:main]
use = egg:birda
base_dir = %(here)s

pyramid.reload_templates = false
pyramid.reload_resources = false
pyramid.reload_assets = false
pyramid.prevent_http_cache = false
pyramid.debug_authorization = false
pyramid.debug_notfound = false
pyramid.debug_routematch = false
pyramid.debug_templates = true
pyramid.default_locale_name = en

# pyramid_debugtoolbar = Pyramid useful debug toolbar
# pyramid_tm = Pyramid transaction manager
# pyramid_jinja2 = Pyramid jinja2 templating engine
# pyramid_exclog = Pyramid Exception Logger
pyramid.includes =
    pyramid_tm
	pyramid_exclog
	pyramid_jinja2

# By default, the toolbar only appears for clients from IP addresses
# '127.0.0.1' and '::1'.
# debugtoolbar.hosts = 127.0.0.1 ::1

session.secret = ^5$309^vJ-*
# Bird-a sqlite database file
sqlalchemy.url = sqlite:///%(base_dir)s/../db/birda.db
# Default commit veto: prevent commit if the response status is 4xx, 5xx or if there is a response header "X-Tm"
# with a value that does not equal "commit"
tm.commit_veto = pyramid_tm.default_commit_veto

debugtoolbar.prevent_http_cache = false
debugtoolbar.reload_assets = false
debugtoolbar.reload_resources = false
debugtoolbar.reload_templates = false

# Bird-A Configurations
birda.frontend = http://0.0.0.0:9000

birda.verbose = true
birda.do_commit = true

birda.storage_type = file
birda.storage_file_birda_db = %(base_dir)s/../db/birda.turtle
birda.storage_file_indiv_db = %(base_dir)s/../db/indiv.turtle
birda.storage_file_test_db = %(base_dir)s/../db/test.turtle

birda.pretty_json_output = false

###
# wsgi server configuration
###

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 8000


###
# logging configuration
# http://docs.pylonsproject.org/projects/pyramid/en/1.6-branch/narr/logging.html
###

[loggers]
keys = root, birda, sqlalchemy, exc_logger, cornice

[handlers]
keys = console, exc_handler

[formatters]
keys = generic, exc_formatter

[logger_root]
level = INFO
handlers = console

[logger_birda]
level = WARN
handlers =
qualname = birda

[logger_exc_logger]
level = ERROR
handlers = exc_handler
qualname = exc_logger

[logger_sqlalchemy]
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_cornice]
level = WARN
handlers =
qualname = cornice

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_exc_handler]
base_dir = %(here)s
class = FileHandler
args = ('%(base_dir)s/../log/backend_exception.log',)
level = ERROR
formatter = exc_formatter

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s][%(threadName)s] %(message)s

[formatter_exc_formatter]
format = %(asctime)s %(message)s

# End logging configuration
